---

- name: Updating nodes in the environment and adding swap to them
  hosts: all
  become: yes
  roles:
  - common
  tags:
  - updatingnodes

- name: Setting up networking in load balancer nodes
  hosts: lb_nodes
  become: yes
  roles:
  - networking
  tags:
  - networking
  - networking_lbs
  vars:
    bridges:
    - br-mgmt
    nodetype: lb

- name: Setting up networking in controller nodes
  hosts: controller_nodes
  become: yes
  roles:
  - networking
  tags:
  - networking
  - networking_controllers
  vars:
    bridges:
    - br-mgmt
    - br-storage
    - br-provider
    - br-vxlan
    - br-vlan
    nodetype: controller

- name: Setting up networking in compute nodes
  hosts: compute_nodes
  become: yes
  roles:
  - networking
  tags:
  - networking
  - networking_computes
  vars:
    bridges:
    - br-mgmt
    - br-vxlan
    - br-storage
    - br-vlan
    nodetype: compute

- name: Setting up networking in network nodes
  hosts: network_nodes
  become: yes
  roles:
  - networking
  tags:
  - networking
  - networking_network
  vars:
    bridges:
    - br-mgmt
    - br-vxlan
    - br-vlan
    - br-provider
    nodetype: network

- name: Setting up networking in cinder nodes
  hosts: cinder_nodes
  become: yes
  roles:
  - networking
  tags:
  - networking
  - networking_cinder
  vars:
    bridges:
    - br-mgmt
    - br-storage
    nodetype: cinder

# Used IP ddresses
- name: Gathering used IP addresses
  hosts: all
  tasks:
  - shell: "ip -o addr | grep -v inet6 | grep -vE 'eth0|127.0.0.1' | awk '{ print $4 }' | awk -F/ '{ printf \"%s,\", $1 }' | sed 's/,$//'"
    register: interfaces
  - debug:
      msg: "{{ interfaces.stdout }}"
    when: interfaces.rc == 0
  tags:
  - used_ips

- name: Creating volume group cinder-volumes in cinder nodes
  hosts: cinder_nodes
  become: yes
  tasks:
  - lvg:
      vg: cinder-volumes
      pvs: /dev/vdb
  tags:
  - cinder-volgroup

- name: Cloning, preparing and bootstrapping OpenStack-Ansible
  hosts: deployment_nodes
  become: yes
  roles:
  - openstack-ansible
  tags:
  - openstackansiblesetup
  vars:
    openstack_version: stable/stein

- name: Fetching the public key from the deployment node
  hosts: deployment_nodes
  become: yes
  tasks:
  - name: Fetching public key from deployment node
    fetch:
      dest: authorized_keys
      src: /root/.ssh/id_rsa.pub
      flat: yes
  tags:
  - copyingpublickey

- name: Copying SSH public key to the deploy nodes
  hosts: infrastructure_nodes
  become: yes
  tasks:
  - name: Making sure that the /root/.ssh directory exists
    file:
      mode: '0700'
      state: directory
      path: /root/.ssh
  - name: Copying public key to the authorized_keys file
    copy:
      src: authorized_keys
      mode: '0600'
      dest: /root/.ssh/authorized_keys
  tags:
  - copyingpublickey
